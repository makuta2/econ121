data = nlsy_kids)
# This R script presents solutions to ECON 121 Problem Set 4.
# Clear environment, load R packages
rm(list=ls())
library(tidyverse)
library(fixest)
# Load the dataset
#load("/Users/tvogl/Dropbox/courses/econ121/data/nlsy_kids/nlsy_kids.Rdata")
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# # # # # #
# Problem 2 #
# # # # # #
# Summary statistics appear below. 21 percent of the sample participated
# in HS. 32 percent of the sample is black, and 20 percent is Hispanic.
# Average mother's education is 12 years. 3 in 10 repeat a grade, another
# 3 in 10 go to college, and 7 in 10 graduate high school. Also worthy
# of note is the number of NA values, which is very high for ppvt_3.
# This high level of "missingness" will be important later.
summary(nlsy_kids)
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
repgrade = mean(repgrade, na.rm = TRUE),
somecoll = mean(somecoll, na.rm = TRUE))
# Load the dataset
#load("/Users/tvogl/Dropbox/courses/econ121/data/nlsy_kids/nlsy_kids.Rdata")
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# Summary statistics appear below. 21 percent of the sample participated
# in HS. 32 percent of the sample is black, and 20 percent is Hispanic.
# Average mother's education is 12 years. 3 in 10 repeat a grade, another
# 3 in 10 go to college, and 7 in 10 graduate high school. Also worthy
# of note is the number of NA values, which is very high for ppvt_3.
# This high level of "missingness" will be important later.
summary(nlsy_kids)
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
[["repeat"]] = mean([["repeat"]], na.rm = TRUE),
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
nlsy_kids$"repeat" = mean([["repeat"]], na.rm = TRUE),
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
nlsy_kids[["repeat"]] = mean(nlsy_kids[["repeat"]], na.rm = TRUE),
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
nlsy_kids[["repeat"]] = mean(nlsy_kids[["repeat"]], na.rm = TRUE),
# The question asks about the backgrounds of kids who participated in HS.
# HS participants are more likely to be black, have lower family income,
# and have less educated mothers, on average. They are also more likely
# to repeat a grade and less likely to go to college. However, these
# differences in long-term outcomes may reflect selection bias rather
# than the effects of HS. In other words, HS participants may have
# worse outcomes because they come from disadvantaged backgrounds.
nlsy_kids %>%
group_by(head_start) %>%
summarize(black = mean(black, na.rm = TRUE),
lninc_0to3 = mean(lninc_0to3, na.rm = TRUE),
momed = mean(momed, na.rm = TRUE),
somecoll = mean(somecoll, na.rm = TRUE))
# Run an OLS regression of the age 5-6 test score on the HS indicator,
# clustering standard errors by mom_id.
feols(comp_score_5to6 ~ head_start,
data = nlsy_kids,
vcov = ~mom_id)
# For reference, compute the standard deviation of the test score.
sd(nlsy_kids$comp_score_5to6, na.rm=TRUE)
# First create a data frame of families instead of kids. We can do so
# using group_by(), as follows:
nlsy_families <-
nlsy_kids %>%
drop_na(comp_score_5to6, head_start) %>%
group_by(mom_id) %>%
summarise(mean_test = mean(comp_score_5to6),
mean_head_start = mean(head_start))
# Now estimate OLS using the family averages
feols(mean_test ~ mean_head_start,
data = nlsy_families,
vcov = 'hetero')
# Estimate the model with mother fixed effects.
feols(comp_score_5to6 ~ head_start | mom_id,
data = nlsy_kids)
# In the fixed effect regression, we can include child-level covariates
# only. We cannot control for any family-level variables that do not
# vary between siblings. I choose male, firstborn, lninc_0to3,
# dadhome_0to3, and lnbw as covariates. I do not use ppvt_3 because
# it is available for few observations. When I include it, the sample
# shrinks and changes composition a lot. This was a judgment call, and
# you could have done it differently. as researchers we often face
# tradeoffs between having more information (by controlling for PPVT)
# and maintaining the composition of the sample (by not controlling for PPVT).
feols(comp_score_5to6 ~ head_start + male + firstborn + lninc_0to3 +
dadhome_0to3 + lnbw | mom_id,
data = nlsy_kids)
# The estimate is still positive and statistically significant, but it
# is slightly smaller, in magnitude: HS participation raises test scores
# by 5.6 points on average. It is useful to check whether this is due to
# omitted variable bias or the different composition of the subsample
# with non-missing covariates. I re-estimate the model with no pre-HS
# covariates, but this time using the sub-sample with non-missing covariates.
# This was not necessary for full credit, but it is good practice.
nlsy_kids_subsample <-
nlsy_kids %>%
drop_na(male, firstborn, lninc_0to3, dadhome_0to3, lnbw)
feols(comp_score_5to6 ~ head_start | mom_id,
data = nlsy_kids_subsample)
# Standardize outcome variables by subtracting mean and dividing by SD.
# The scale() function in R does this in one step:
nlsy_kids <-
nlsy_kids %>%
mutate(std_5to6 = scale(comp_score_5to6),
std_7to10 = scale(comp_score_7to10),
std_11to14 = scale(comp_score_11to14))
# You were not expected to know this function. You could have also used:
nlsy_kids <-
nlsy_kids %>%
mutate(stdb_5to6 = (comp_score_5to6 - mean(comp_score_5to6, na.rm = TRUE))/sd(comp_score_5to6, na.rm = TRUE),
stdb_5to6 = (comp_score_7to10 - mean(comp_score_7to10, na.rm = TRUE))/sd(comp_score_7to10, na.rm = TRUE),
stdb_5to6 = (comp_score_11to14 - mean(comp_score_11to14, na.rm = TRUE))/sd(comp_score_11to14, na.rm = TRUE))
# Now we run a FE regression of each standardized score on HS participation,
# finding thatthe estimated effects shrink as children get older. HS raises
# scores by 0.34 standard deviations on average at ages 5-6, by 0.16 standard
# deviations at ages 7-10, and by 0.15 standard deviations at ages 11 to 14.
feols(std_5to6 ~ head_start | mom_id,
data = nlsy_kids)
feols(std_7to10 ~ head_start | mom_id,
data = nlsy_kids)
feols(std_11to14 ~ head_start | mom_id,
data = nlsy_kids)
# You may notice that the sample changes across regressions due to missingness.
# You could have also held the sample constant, as we did above for adding
# covariates. The effect on the test score at age 5-6 is still largest.
nlsy_kids_subsample <-
nlsy_kids %>%
drop_na(std_5to6, std_7to10, std_11to14)
feols(std_5to6 ~ head_start | mom_id,
data = nlsy_kids_subsample)
feols(std_7to10 ~ head_start | mom_id,
data = nlsy_kids_subsample)
feols(std_11to14 ~ head_start | mom_id,
data = nlsy_kids_subsample)
# We run FE regressions for longer-term outcomes. We find that HS participation
# reduces grade repetition by 5 percentage points, reduces learning disability
# diagnosis by 4 percentage points, raises high school graduation by 13 percentage
# points, raises college attendance by 7 percentage points, reduces idleness
# (not working or studying) by 7 percentage points, and reduces fair/poor health
# by 7 percentage points. All of these results but one (for grade repetition)
# are significant at the 5 percent level. The grade repetition result is significant
# at the 9 percent level.
feols(repgrade ~ head_start | mom_id,
data = nlsy_kids)
feols(learndis ~ head_start | mom_id,
data = nlsy_kids)
feols(hsgrad ~ head_start | mom_id,
data = nlsy_kids)
feols(somecoll ~ head_start | mom_id,
data = nlsy_kids)
feols(idle ~ head_start | mom_id,
data = nlsy_kids)
feols(fphealth ~ head_start | mom_id,
data = nlsy_kids)
feols(hsgrad ~ head_start*(hispanic + black + male) | mom_id,
data = nlsy_kids)
# # # # # #
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(mfx)
library(car)
# load dataset
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# generate fair/poor health dummy
table(nhis2010$health)
nhis2010$fpoor <- ifelse(nhis2010$health == "Fair" |
nhis2010$health == "Poor", 1, 0)
# summarize the dataset
summary(nhis2010)
# This R script presents solutions to ECON 121 Problem Set 3.
# Note: You may have noticed that the dataset includes a
#       primary sampling unit identifier and a sampling
#       weight. It would be reasonable to cluster standard
#       errors at the PSU level and weight using sampling
#       weights, but these details were not the focus of the
#       problem set and are therefore not required.
# # # # # #
# Problem 2 #
# # # # # #
# Summary statistics appear below. 16 percent of the sample
# reports being in fair or poor health, and 13 percent died
# died before 2019. The sample has a median age of 49. (The mean
# age is less meaningful because age was top-coded at 85. You
# did not need to notice this.) 56 percent of the sample
# is female, perhaps surprisingly. This gender imbalance
# has two sources. First, men and women responded to the
# survey at different rates, so the gender imbalance shrinks
# when we use the sampling weights. Second, men die at
# higher rates than women, so the gender imbalance grows
# with age. For the outcome variables, 16 percent of the sample
# reports being in fair or poor health, while 13 percent dies
# by 2019.
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(mfx)
library(car)
# load dataset
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# generate fair/poor health dummy
table(nhis2010$health)
nhis2010$fpoor <- ifelse(nhis2010$health == "Fair" |
nhis2010$health == "Poor", 1, 0)
# summarize the dataset
summary(nhis2010)
ggplot(nhis2010, aes(x=age)) +
geom_histogram()
mean(nhis2010$male) # 44% male, 56% female
weighted.mean(nhis2010$male,w = nhis2010$sampweight) # 48% male, 52% female with weights
mean(nhis2010$fpoor, na.rm = TRUE)
mean(nhis2010$mort, na.rm = TRUE)
# # # # # #
# Problem 3 #
# # # # # #
# 5-year mortality is higher for people with fair/poor health
# than for people with good/very good/excellent health. Thus,
# self-reported health status is predictive of mortality. In
# both groups, 5-year mortality rises non-linearly with age.
nhis2010 %>%
drop_na(age, fpoor, mort) %>% # drop missing values
group_by(age, fpoor) %>% # group by age and fpoor
summarise(mort = mean(mort)) %>% # mean of mort
ggplot(aes(x = age, y = mort, color = factor(fpoor))) + # factor() to make the color scale discrete
geom_line() +
labs(x="age", y="mortality rate", color = "") # color = "" to remove the legend title
# # # # # #
# Problem 4 #
# # # # # #
# Rates of mortality and fair/poor health decline with
# family income. The same general pattern holds
# for education as well, although individuals with
# post-graduate education do not appear to be in worse
# health than college graduates.
# Mortality by income
nhis2010 %>%
drop_na(incfam, mort) %>%
group_by(incfam) %>%
summarize(mean_mort = mean(mort)) %>%
ggplot(aes(x = incfam, y = mean_mort)) +
geom_bar(stat = "identity")
# Health by income
nhis2010 %>%
drop_na(incfam, fpoor) %>%
group_by(incfam) %>%
summarize(mean_fpoor = mean(fpoor)) %>%
ggplot(aes(x = incfam, y = mean_fpoor)) +
geom_bar(stat = "identity")
# Mortality by education
nhis2010 %>%
drop_na(edyrs, mort) %>%
mutate(edlev = case_when((edyrs<12)                 ~ 1, # code edlev as numeric
(edyrs==12)                 ~ 2, # so the graph is ordered
(edyrs>=13 & edyrs<15)      ~ 3, # correctly
(edyrs==16)                 ~ 4,
(edyrs>=17)                 ~ 5)) %>%
group_by(edlev) %>%
summarize(mean_mort = mean(mort)) %>%
ggplot(aes(x = edlev, y = mean_mort)) +
geom_bar(stat = "identity")
# Health by education
nhis2010 %>%
drop_na(edyrs, fpoor) %>%
mutate(edlev = case_when((edyrs<12)                  ~ 1,
(edyrs==12)                 ~ 2,
(edyrs>=13 & edyrs<15)      ~ 3,
(edyrs==16)                 ~ 4,
(edyrs>=17)                 ~ 5)) %>%
group_by(edlev) %>%
summarize(mean_fpoor = mean(fpoor)) %>%
ggplot(aes(x = edlev, y = mean_fpoor)) +
geom_bar(stat = "identity")
# # # # # #
# Problem 5 #
# # # # # #
# Because age and education have non-linear relation-
# ships with health, I include a series of dummy
# variables for categories. I use the education cate-
# gories from above, and 10-year age intervals.
# For both outcomes and for all three models, the
# results show that mortality and fair/poor health
# decline with income, decline with education, and
# rise with age. One surprising result is that
# conditional on the socioeconomic variables, racial
# gaps in mortality are small and insignificant.
# There are larger racial gaps in fair/poor health.
# Another surprising result is that Hispanics have
# low mortality risk (conditional on the other
# covariates).
# The linear probability results are similar to the
# probit and logit average marginal effects, although
# the similarity is much stronger for fair/poor health
# than for mortality. You did not need to comment
# on the reason in your response, but the larger
# difference in the case of mortality is probably
# due to the fact that mortality risk is exceptionally
# low across much of the age distribution, so that
# the marginal effect is calculated in the flatter part
# of the CDF.
# I will assign the regression models to names and then
# use summary(model_name), so all coefficients are reported.
# Otherwise, as you know, the results table gets cut off.
# Generate age and education categories
nhis2010 <-
nhis2010 %>%
mutate(agecat = floor(age/10)*10,
edlev = case_when((edyrs<12)                  ~ 1,
(edyrs==12)                 ~ 2,
(edyrs>=13 & edyrs<15)      ~ 3,
(edyrs==16)                 ~ 4,
(edyrs>=17)                 ~ 5))
# Mortality analyses
ols_mort <-
feols(mort ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero')
summary(ols_mort)
probit_mort <-
feglm(mort ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero')
summary(probit_mort)
logit_mort <-
feglm(mort ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero')
summary(logit_mort)
# Marginal effects for the probit and logit models
probitmfx(mort ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, atmean = TRUE, robust = TRUE)
logitmfx(mort ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, atmean = TRUE, robust = TRUE)
# Fair/poor health analyses
ols_fpoor <-
feols(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero')
summary(ols_fpoor)
probit_fpoor <-
feglm(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero', family = 'probit')
summary(probit_fpoor)
logit_fpoor <-
feglm(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero', family = 'logit')
summary(logit_fpoor)
# Marginal effects for the probit and logit models
probitmfx(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, atmean = TRUE, robust = TRUE)
logitmfx(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, atmean = TRUE, robust = TRUE)
# Odds ratio effects for the logit model
logitor(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, robust = TRUE)
# # # # # #
# Problem 6 #
# # # # # #
# I used the logit model for this test.
# It is possible to use car::deltaMethod() with coefficients on
# the categories of factor variables, but it's easier to work with
# dummy variables. For pedagogical purposes, I will generate income
# and education category dummies, and then I will re-run the model.
table(nhis2010$incfam)
table(nhis2010$edlev)
nhis2010 <-
nhis2010 %>%
mutate(inc_35_50 = ifelse(incfam=="$35,000 - $49,999",1,0),
inc_50_75 = ifelse(incfam=="$50,000 - $74,999",1,0),
inc_75_100 = ifelse(incfam=="$75,000 - $99,999",1,0),
inc_gt_100 = ifelse(incfam=="$100,000 and over",1,0),
ed_12 = ifelse(edlev==2,1,0),
ed_13_15 = ifelse(edyrs>12 & edyrs<16,1,0),
ed_16 = ifelse(edyrs==16,1,0),
ed_gt16 = ifelse(edyrs>16,1,0))
logit_mort2 <-
feglm(mort ~ inc_35_50 + inc_50_75 + inc_75_100 + inc_gt_100 +
ed_12 + ed_13_15 + ed_16 + ed_gt16 + factor(agecat) +
black + hisp + asian + other,
data = nhis2010, vcov = 'hetero', family = 'logit')
summary(logit_mort2)
# This model is the same as the one above. We just coded the
# categorical variables as dummies. The difference in log odds
# between Groups A and B is given by:
deltaMethod(logit_mort2, "asian - black - ed_16 - inc_gt_100")
# Since this is positive, we conclude that the poorer, less-
# educated Asian group have higher mortality risk than
# richer, more-educated Black group. The 95% confidence
# interval does not include 0, so the difference is
# statistically significant at the 5% level. If we
# exponentiate this difference, we get:
exp(.61244)
# which implies that the odds of dying are 84 percent higher
# for the poorer, less-educated, Asian group. You did not
# need to state this quantity in your answer.
# It's likely that this model is not the best for
# testing differences between these groups. It would
# be better to include interactions of race and income.
# # # # # #
# Problem 7 #
# # # # # #
# We probably should not interpret these results as causal.
# One problem is that there are many confounding variables
# that we do not observe but may jointly determine health
# and income, for instance place of birth. Another problem
# is that there may be reverse causality, i.e. health may
# affect income.
# # # # # #
# Problem 8 #
# # # # # #
# I use the logit model again, and I exponentiated the
# coefficients for interpretability. I control for
# insurance status, smoking status, exercise, bacon
# consumption, and obesity. To keep the samples the same
# in the regressions with and without the additional
# control variables, I run the long regression
# and the short regression on the same sample, which
# required subsetting the data first. This was not required.
# Smoking, exercise, and obesity predicted mortality: ever smoking raised
# the odds of death by 62%, ever exercising reduced the odds by 59%,
# and obesity raised the odds by 85%. In contrast, uninsurance and binge
# drinking had weak to null relationships with mortality. The patterns
# explain part of the socioeconomic gradient in health. After
# controlling for these variables, the odds ratio on the highest
# income category rose from 0.21 to 0.25 and that on the >16 years of
# education dummy rose from 0.26 to 0.36. Because the odds ratios are
# moving closer to 1, mortality gaps are smaller after controlling for
# health behaviors. Health behavior explains a larger share of the
# education-mortality relationship than the income-mortality relationship.
# Recode behavior variables as 0/1 dummies
nhis2010 <-
nhis2010 %>%
mutate(exev = ifelse(vig10fwk > 0, 1, 0), # ever exercise
bingev = ifelse(alc5upyr > 0, 1, 0), # ever binge drink
obese = ifelse(bmi >= 30, 1, 0) ) # obese if bmi>=30
# Subset data to non-missing obs
nhis_subset <-
nhis2010 %>%
drop_na(mort, incfam, edlev, agecat, white, black, hisp,
uninsured, smokev, exev, bingev, obese)
# Run regression without health behaviors
logitor(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other,
data = nhis_subset, robust = TRUE)
# Run regression with health behaviors
logitor(fpoor ~ incfam + factor(edlev) + factor(agecat) +
black + hisp + asian + other +
uninsured + smokev + exev + bingev + obese,
data = nhis_subset, robust = TRUE)
