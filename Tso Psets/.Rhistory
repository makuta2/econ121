summary(ols_model)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# Calculate family mean of Head Start participation and age 5-6 test scores
family_means <- aggregate(cbind(head_start, comp_score_5to6) ~ mom_id, data = nlsy_kids, FUN = mean)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
rm(list=ls())
library(tidyverse)
library(fixest)
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# The PDF will show the code AND output here.
# Summarize the data here.
#looking at the amount of missing data to determine which ones are worth dropping.
colSums(is.na(nlsy_kids))/nrow(nlsy_kids)
#ppvt_3 is missing 80%+, dropping would result in most of the data being missing
nlsy_kids<-nlsy_kids %>% drop_na(lninc_0to3, momed, lnbw,
comp_score_5to6 ,learndis)
view(nlsy_kids)
summary(nlsy_kids)
nlsy_kids_HS <- subset(nlsy_kids, head_start == 1)
nlsy_kids_NHS <- subset(nlsy_kids, head_start == 0)
#comparing the difference of mean and median of the two subsets of head_start
# Subset the dataset for head_start = 1
subset_head_start_1 <- subset(nlsy_kids, head_start == 1)
# Subset the dataset for head_start = 0
subset_head_start_0 <- subset(nlsy_kids, head_start == 0)
# Get the names of all variables in the dataset
all_variables <- names(nlsy_kids)
# Initialize vectors to store differences
mean_differences <- c()
median_differences <- c()
# Loop through variables
for (variable in all_variables) {
# Skip non-numeric variables
if (!is.numeric(nlsy_kids[[variable]])) {
next
}
# Calculate mean and median for head_start = 1
mean_head_start_1 <- mean(subset_head_start_1[[variable]])
median_head_start_1 <- median(subset_head_start_1[[variable]])
# Calculate mean and median for head_start = 0
mean_head_start_0 <- mean(subset_head_start_0[[variable]])
median_head_start_0 <- median(subset_head_start_0[[variable]])
# Calculate differences
mean_difference <- mean_head_start_1 - mean_head_start_0
median_difference <- median_head_start_1 - median_head_start_0
# Store differences in vectors
mean_differences <- c(mean_differences, mean_difference)
median_differences <- c(median_differences, median_difference)
}
# Create a data frame to display the results
results <- data.frame(
Variable = all_variables,
MeanDifference = mean_differences,
MedianDifference = median_differences
)
# Print the results, head_start minus non_head_start
print(results)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
# Calculate family mean of Head Start participation and age 5-6 test scores
family_means <- aggregate(cbind(head_start, comp_score_5to6) ~ mom_id, data = nlsy_kids, FUN = mean)
# Create a new data frame with family means
family_data <- data.frame(
MotherID = family_means$mom_id,
Mean_HeadStart = family_means$head_start,
Mean_TestScore = family_means$comp_score_5to6
)
# Use OLS to estimate the association between mean Head Start participation and mean test scores
ols_model_mother <- lm(Mean_TestScore ~ Mean_HeadStart, data = family_data)
# Print the summary of the model
summary(ols_model_mother)
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Print the first few rows of the new data frame
head(family_means)
view(family_means)
# Run OLS regression
ols_model_family <- lm(mean_test_scores ~ mean_head_start, data = family_means)
# Summarize the model
summary(ols_model_family)
# All question 4 code here
# Calculate family mean of Head Start participation and age 5-6 test scores
family_means <- aggregate(cbind(head_start, comp_score_5to6) ~ mom_id, data = nlsy_kids, FUN = mean)
# Create a new data frame with family means
family_data <- data.frame(
MotherID = family_means$mom_id,
Mean_HeadStart = family_means$head_start,
Mean_TestScore = family_means$comp_score_5to6
)
# Use OLS to estimate the association between mean Head Start participation and mean test scores
ols_model_mother <- lm(Mean_TestScore ~ Mean_HeadStart, data = family_data)
# Print the summary of the model
summary(ols_model_mother)
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- lm(mean_test_scores ~ mean_head_start, data = family_means)
# Summarize the model
summary(ols_model_family)
# All question 4 code here
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- lm(mean_test_scores ~ mean_head_start, data = family_means)
# Summarize the model
summary(ols_model_family)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
rm(list=ls())
library(tidyverse)
library(fixest)
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# The PDF will show the code AND output here.
# Summarize the data here.
#looking at the amount of missing data to determine which ones are worth dropping.
colSums(is.na(nlsy_kids))/nrow(nlsy_kids)
#ppvt_3 is missing 80%+, dropping would result in most of the data being missing
nlsy_kids<-nlsy_kids %>% drop_na(lninc_0to3, momed, lnbw,
comp_score_5to6 ,learndis)
view(nlsy_kids)
summary(nlsy_kids)
nlsy_kids_HS <- subset(nlsy_kids, head_start == 1)
nlsy_kids_NHS <- subset(nlsy_kids, head_start == 0)
#comparing the difference of mean and median of the two subsets of head_start
# Subset the dataset for head_start = 1
subset_head_start_1 <- subset(nlsy_kids, head_start == 1)
# Subset the dataset for head_start = 0
subset_head_start_0 <- subset(nlsy_kids, head_start == 0)
# Get the names of all variables in the dataset
all_variables <- names(nlsy_kids)
# Initialize vectors to store differences
mean_differences <- c()
median_differences <- c()
# Loop through variables
for (variable in all_variables) {
# Skip non-numeric variables
if (!is.numeric(nlsy_kids[[variable]])) {
next
}
# Calculate mean and median for head_start = 1
mean_head_start_1 <- mean(subset_head_start_1[[variable]])
median_head_start_1 <- median(subset_head_start_1[[variable]])
# Calculate mean and median for head_start = 0
mean_head_start_0 <- mean(subset_head_start_0[[variable]])
median_head_start_0 <- median(subset_head_start_0[[variable]])
# Calculate differences
mean_difference <- mean_head_start_1 - mean_head_start_0
median_difference <- median_head_start_1 - median_head_start_0
# Store differences in vectors
mean_differences <- c(mean_differences, mean_difference)
median_differences <- c(median_differences, median_difference)
}
# Create a data frame to display the results
results <- data.frame(
Variable = all_variables,
MeanDifference = mean_differences,
MedianDifference = median_differences
)
# Print the results, head_start minus non_head_start
print(results)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
# All question 4 code here
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- lm(mean_test_scores ~ mean_head_start, data = family_means)
# Summarize the model
summary(ols_model_family)
# All question 5 code here
# Assuming you have a dataset called nlsy_kids
# Replace "YourDataset" and "YourHeadStartVariable" with the actual names from your dataset
# Install and load the plm package if not already installed
# install.packages("plm")
library(plm)
# All question 5 code here
# Convert data to a panel data format
panel_data <- pdata.frame(nlsy_kids, index = c("mother_id", "year"))
# Run OLS regression
ols_model_family <- feols(mean_test_scores ~ mean_head_start, data = family_means)
# Run OLS regression
ols_model_family <- feols(mean_test_scores ~ mean_head_start,
data = family_means,
vcov="hetero")
# Summarize the model
summary(ols_model_family)
feols(comp_score_5yo6 ~ head_start, data=nlsy_kids, vcov=momid)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=momid)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=mom_id)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
rm(list=ls())
library(tidyverse)
library(fixest)
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# The PDF will show the code AND output here.
# Summarize the data here.
#looking at the amount of missing data to determine which ones are worth dropping.
colSums(is.na(nlsy_kids))/nrow(nlsy_kids)
#ppvt_3 is missing 80%+, dropping would result in most of the data being missing
nlsy_kids<-nlsy_kids %>% drop_na(lninc_0to3, momed, lnbw,
comp_score_5to6 ,learndis)
view(nlsy_kids)
summary(nlsy_kids)
nlsy_kids_HS <- subset(nlsy_kids, head_start == 1)
nlsy_kids_NHS <- subset(nlsy_kids, head_start == 0)
#comparing the difference of mean and median of the two subsets of head_start
# Subset the dataset for head_start = 1
subset_head_start_1 <- subset(nlsy_kids, head_start == 1)
# Subset the dataset for head_start = 0
subset_head_start_0 <- subset(nlsy_kids, head_start == 0)
# Get the names of all variables in the dataset
all_variables <- names(nlsy_kids)
# Initialize vectors to store differences
mean_differences <- c()
median_differences <- c()
# Loop through variables
for (variable in all_variables) {
# Skip non-numeric variables
if (!is.numeric(nlsy_kids[[variable]])) {
next
}
# Calculate mean and median for head_start = 1
mean_head_start_1 <- mean(subset_head_start_1[[variable]])
median_head_start_1 <- median(subset_head_start_1[[variable]])
# Calculate mean and median for head_start = 0
mean_head_start_0 <- mean(subset_head_start_0[[variable]])
median_head_start_0 <- median(subset_head_start_0[[variable]])
# Calculate differences
mean_difference <- mean_head_start_1 - mean_head_start_0
median_difference <- median_head_start_1 - median_head_start_0
# Store differences in vectors
mean_differences <- c(mean_differences, mean_difference)
median_differences <- c(median_differences, median_difference)
}
# Create a data frame to display the results
results <- data.frame(
Variable = all_variables,
MeanDifference = mean_differences,
MedianDifference = median_differences
)
# Print the results, head_start minus non_head_start
print(results)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=mom_id)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=mom_id)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov="mom_id")
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, fixef="mom_id")
# All question 4 code here
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, fixef="mom_id")
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- feols(mean_test_scores ~ mean_head_start,
data = family_means,
vcov=)
# Summarize the model
summary(ols_model_family)
# All question 4 code here
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, fixef=mom_id)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=~mom_id)
# All question 4 code here
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- feols(mean_test_scores ~ mean_head_start,
data = family_means,
vcov=)
# Summarize the model
summary(ols_model_family)
feols(comp_score_5to6 ~ head_start, data=nlsy_kids, vcov=~mom_id)
view(ols_model)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
# All question 3 code here.
# Run OLS regression
ols_model <- ols(comp_score_5to6 ~ head_start, data = nlsy_kids)
# All question 3 code here.
# Run OLS regression
ols_model <- ols_model(comp_score_5to6 ~ head_start, data = nlsy_kids)
# All question 3 code here.
# Run OLS regression
ols_model <- lm(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
ols_model <- feols(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
# All question 5 code here
ols_model_fe <- feols(comp_score_5to6 ~ head_start | mother_id,
data = nlsy_kids, vcov = "iid")
# All question 5 code here
ols_model_fe <- feols(comp_score_5to6 ~ head_start | mom_id,
data = nlsy_kids, vcov = "iid")
summary(ols_model_fe)
# All question 5 code here
ols_model_fe <- feols(comp_score_5to6 ~ head_start | mom_id,
data = nlsy_kids)
summary(ols_model_fe)
# All question 6 code here
ols_model_cov <- feols(comp_score_5to6 ~ head_start + ppvt_3 | mom_id,
data = nlsy_kids)
summary(ols_model_cov)
| mom_id,
# All question 6 code here
ols_model_cov <- feols(comp_score_5to6 ~ head_start + ppvt_3 + learndis | mom_id,
data = nlsy_kids)
summary(ols_model_cov)
ols_model_cov <- feols(comp_score_5to6 ~ head_start + ppvt_3 + learndis | mom_id,
data = nlsy_kids, vcov = ~mom_id)
summary(ols_model_cov)
data = nlsy_kids, vcov = "hetero"")
data = nlsy_kids, vcov = "hetero)
ols_model_cov <- feols(comp_score_5to6 ~ head_start + ppvt_3 + learndis | mom_id,
data = nlsy_kids, vcov = "hetero")
summary(ols_model_cov)
# All question 6 code here
ols_model_cov_ppvt <- feols(comp_score_5to6 ~ head_start + ppvt_3 | mom_id,
data = nlsy_kids, vcov = "hetero")
ols_model_cov_learndis <- feols(comp_score_5to6 ~ head_start + learndis | mom_id,
data = nlsy_kids, vcov = "hetero")
ols_model_cov_both <- feols(comp_score_5to6 ~ head_start + ppvt_3 + learndis | mom_id,
data = nlsy_kids, vcov = "hetero")
summary(ols_model_cov_ppvt)
summary(ols_model_cov_learndis)
summary(ols_model_cov_both)
# All question 7 code here
# Standardize test scores across ages
standardize_scores <- function(scores) {
return((scores - mean(scores, na.rm = TRUE)) / sd(scores, na.rm = TRUE))
}
# Standardize test scores for each age group
nlsy_kids$std_comp_score_7to10 <- standardize_scores(nlsy_kids$comp_score_7to10)
nlsy_kids$std_comp_score_11to14 <- standardize_scores(nlsy_kids$comp_score_11to14)
# Estimate fixed-effects models for each age group
fe_model_7to10 <- feols(std_comp_score_7to10 ~ head_start | mother_id, data = nlsy_kids, vcov = "iid")
# All question 7 code here
# Standardize test scores across ages
standardize_scores <- function(scores) {
return((scores - mean(scores, na.rm = TRUE)) / sd(scores, na.rm = TRUE))
}
# Standardize test scores for each age group
nlsy_kids$std_comp_score_7to10 <- standardize_scores(nlsy_kids$comp_score_7to10)
nlsy_kids$std_comp_score_11to14 <- standardize_scores(nlsy_kids$comp_score_11to14)
# Estimate fixed-effects models for each age group
fe_model_7to10 <- feols(std_comp_score_7to10 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_11to14 <- feols(std_comp_score_11to14 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
# Print the summary of the models
summary(fe_model_7to10)
summary(fe_model_11to14)
# All question 7 code here
# Standardize test scores across ages
standardize_scores <- function(scores) {
return((scores - mean(scores, na.rm = TRUE)) / sd(scores, na.rm = TRUE))
}
# Standardize test scores for each age group
nlsy_kids$std_comp_score_5to6 <- standardize_scores(nlsy_kids$comp_score_5to6)
nlsy_kids$std_comp_score_7to10 <- standardize_scores(nlsy_kids$comp_score_7to10)
nlsy_kids$std_comp_score_11to14 <- standardize_scores(nlsy_kids$comp_score_11to14)
# Estimate fixed-effects models for each age group
fe_model_7to10 <- feols(std_comp_score_5to6 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_7to10 <- feols(std_comp_score_7to10 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_11to14 <- feols(std_comp_score_11to14 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
# Print the summary of the models
summary(fe_model_5to6)
# All question 7 code here
# Standardize test scores across ages
standardize_scores <- function(scores) {
return((scores - mean(scores, na.rm = TRUE)) / sd(scores, na.rm = TRUE))
}
# Standardize test scores for each age group
nlsy_kids$std_comp_score_5to6 <- standardize_scores(nlsy_kids$comp_score_5to6)
nlsy_kids$std_comp_score_7to10 <- standardize_scores(nlsy_kids$comp_score_7to10)
nlsy_kids$std_comp_score_11to14 <- standardize_scores(nlsy_kids$comp_score_11to14)
# Estimate fixed-effects models for each age group
fe_model_5to6 <- feols(std_comp_score_5to6 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_7to10 <- feols(std_comp_score_7to10 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_11to14 <- feols(std_comp_score_11to14 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
# Print the summary of the models
summary(fe_model_5to6)
summary(fe_model_7to10)
summary(fe_model_11to14)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_logit_hsgrad <- felogit(hsgrad ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_logit_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_logit_learndis <- feols(learndis ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_logit_hsgrad)
summary(fe_logit_learndis)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_logit_hsgrad <- lm(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_logit_learndis <- lm(learndis ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_logit_hsgrad)
summary(fe_logit_learndis)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_logit_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_logit_learndis <- feols(learndis ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_logit_hsgrad)
summary(fe_logit_learndis)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(repeat ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols("repeat" ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols('repeat' ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(`repeat` ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(nlsy_kids[["repeat"]]
~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(nlsy_kids[["repeat"]] ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(nlsy_kids$"repeat" ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_repeat <- feols(`repeat` ~ head_start | mom_id, data = nlsy_kids)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_fphealth <- feols(fphealth ~ head_start | mom_id, data = nlsy_kids)
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summar(fe_model_fphealth)
# All question 8 code here
# Estimate fixed-effects logit models for each outcome
fe_model_fphealth <- feols(fphealth ~ head_start | mom_id, data = nlsy_kids)
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_fphealth)
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
# All question 8 code here
nlsy_kids <- nlsy_kids %>% drop_na(fphealth, hsgrad, somecoll)
# Estimate fixed-effects logit models for each outcome
fe_model_fphealth <- feols(fphealth ~ head_start | mom_id, data = nlsy_kids)
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_fphealth)
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
