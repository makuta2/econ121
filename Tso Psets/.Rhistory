pred_fam_mort
pred_fam_mort <- ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = "dodge",width = 0.4) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = "dodge",width = 0.4) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = "dodge",width = 0.4) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
pred_fam_mort
pred_fam_mort <- ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = "dodge",width = 0.4) +
#geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = "dodge",width = 0.4) +
#geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = "dodge",width = 0.4) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
pred_fam_mort
pred_fam_mort <- ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = "dodge",width = 0.4) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = "dodge",width = 0.4) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = "dodge",width = 0.4) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
pred_fam_mort
pred_fam_mort <- ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.9)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
pred_fam_mort
pred_fam_mort <- ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "Actual", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "Logit", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "Probit", position = position_dodge(width = 0.9)) +
scale_fill_manual(values = c("Logit" = "blue", "Probit" = "green", "Actual" = "red")) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
pred_fam_mort
ggplot(data, aes(x = inc_groups)) +
geom_bar(aes(y = logit_predict_mort, fill = "Logit"), stat = "identity", position = position_dodge(width = 0.7)) +
geom_bar(aes(y = probit_predict_mort, fill = "Probit"), stat = "identity", position = position_dodge(width = 0.7)) +
geom_bar(aes(y = mean_mortality, fill = "Actual"), stat = "identity", position = position_dodge(width = 0.7)) +
labs(x = "Income Groups", y = "Mortality Probability") +
scale_fill_manual(values = c("Logit" = "blue", "Probit" = "green", "Actual" = "red")) +
theme_minimal()
ggplot(nhis2010, aes(x = inc_groups)) +
geom_bar(aes(y = logit_predict_mort, fill = "Logit"), stat = "identity", position = position_dodge(width = 0.7)) +
geom_bar(aes(y = probit_predict_mort, fill = "Probit"), stat = "identity", position = position_dodge(width = 0.7)) +
geom_bar(aes(y = mean_mortality, fill = "Actual"), stat = "identity", position = position_dodge(width = 0.7)) +
labs(x = "Income Groups", y = "Mortality Probability") +
scale_fill_manual(values = c("Logit" = "blue", "Probit" = "green", "Actual" = "red")) +
theme_minimal()
theme_minimal()
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.9)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.9)) +
#geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.9)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.9)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.5)) +
#geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.6)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.7)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.5)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.6)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.7)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.6)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.5)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.4)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.5)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.4)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.3)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
graph_c <- nhis2010 %>%
drop_na(incfam,mort) %>%
group_by(incfam) %>%
summarise(mean_fair_poor_health = mean(health_dummy),
mean_mortality = mean(mort))
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.3)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
graph_c <- nhis2010 %>%
drop_na(incfam,mort) %>%
group_by(incfam) %>%
mutate(mean_fair_poor_health = mean(health_dummy),
mean_mortality = mean(mort))
ggplot(graph_c, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = logit_predict_mort), stat = "identity", fill = "blue", position = position_dodge(width = 0.3)) +
geom_bar(aes(y = probit_predict_mort), stat = "identity", fill = "green", position = position_dodge(width = 0.3)) +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
View(nhis2010)
logit_model_mort <- feglm(mort ~  age +
Low + LowMed + MedHigh + High +
LessHS + HsGrad + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
nhis2010$logit_predict_mort <- predict(logit_model_mort, nhis2010, type="response")
logit_model_mort
deltaMethod(logit_model_mort,"(asian + LessHS + Low) - (black + PostGrad + High)",rhs=0)
#dropping empty rows
nhis2010 <- nhis2010 %>%
drop_na(mort,health_dummy,incfam,age,education_category,black,hisp,asian,other)
# All question 5 code here
#dropping empty rows
nhis2010 <- nhis2010 %>%
drop_na(mort,health_dummy,incfam,age,education_category,black,hisp,asian,other)
#generating dummy variables for education
LessHS <- ifelse(nhis2010$education_category == "Less than High School", 1, 0)
HSGrad <- ifelse(nhis2010$education_category == "High School Completion", 1, 0)
SomeCol <- ifelse(nhis2010$education_category == "Some College", 1, 0)
ColGrad <- ifelse(nhis2010$education_category == "College Completion", 1, 0)
PostGrad <- ifelse(nhis2010$education_category == "Post-graduate Study", 1, 0)
#generating dummy variables for income
Low <- ifelse(nhis2010$incfam == "$0 - $34,999", 1, 0)
LowMed <- ifelse(nhis2010$incfam == "$35,000 - $49,999", 1, 0)
Med <- ifelse(nhis2010$incfam == "$50,000 - $74,999", 1, 0)
MedHigh <- ifelse(nhis2010$incfam == "$75,000 - $99,999", 1, 0)
High <- ifelse(nhis2010$incfam == "$100,000 and over", 1, 0)
#add all the dummy variables to dataframe
nhis2010 <- nhis2010 %>%
mutate(
LessHS=LessHS,
HsGrad=HSGrad,
SomeCol=SomeCol,
ColGrad=ColGrad,
PostGrad=PostGrad,
Low=Low,
LowMed=LowMed,
Med=Med,
MedHigh=MedHigh,
High=High
)
#view(nhis2010)
ols_model_pf <- feols(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero')
nhis2010$ols_predict_pf <- predict(ols_model_pf, nhis2010, type="response")
ols_model_mort <- feols(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero')
nhis2010$ols_predict_mort <- predict(ols_model_mort, nhis2010, type="response")
probit_model_pf <- feglm(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
nhis2010$probit_predict_pf <- predict(probit_model_pf, nhis2010, type="response")
probit_model_mort <- feglm(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
nhis2010$probit_predict_mort <- predict(probit_model_mort, nhis2010, type="response")
logit_model_pf <- feglm(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
nhis2010$logit_predict_pf <- predict(logit_model_pf, nhis2010, type="response")
logit_model_mort <- feglm(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
nhis2010$logit_predict_mort <- predict(logit_model_mort, nhis2010, type="response")
ols_model_pf
probit_model_pf
logit_model_pf
nhis2010 %>%
select(ols_predict_pf,logit_predict_pf,probit_predict_pf) %>%
summary()
nhis2010 %>%
select(ols_predict_mort,logit_predict_mort,probit_predict_mort) %>%
summary()
#marginal effect of IVs for poor and fair health using logit
logitmfx(health_dummy ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for poor and fair healt using probit
probitmfx(health_dummy ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for mortality using logit
logitmfx(mort ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for poor and fair healt usin probit
probitmfx(mort ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#odds ratio of logit mortality
logitor(mort ~incfam+ age + education_category + black + hisp + asian + other,
data = nhis2010,
robust = TRUE)
#odds ratio of logit poor or fair health
logitor(health_dummy ~incfam+ age + education_category + black + hisp + asian + other,
data = nhis2010,
robust = TRUE)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
logit_model_mort
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset, generate variables here.
#install.packages("mfx")
library(mfx)
#install.packages("betareg")
library(betareg)
library(tidyverse)
library(fixest)
library(car)
#load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
load("D:/Documents/Class/Econ 121/econ121/data/nhis2010.Rdata")
#view(nhis2010)
# drop observations with health missing/NA.
nhis2010 <- nhis2010 %>% drop_na(health)
# generate a variable that equals one if fair or poor health, zero otherwise.
table(nhis2010$health)
nhis2010$health_dummy <- ifelse(nhis2010$health %in% c("Fair", "Poor"), 1, 0)
#the sum of Fair and Poor should be the same as 1
table(nhis2010$health_dummy)
# The PDF will show the code AND output here.
# Summarize the data here.
summary(nhis2010)
# All question 3 code here.
# Compute mortality rates by age for both groups
mortality_data <- nhis2010 %>%
drop_na(age, mort)%>%
group_by(health_dummy, age) %>%
summarise(mortality_rate = mean(mort))
# Create separate line plots for the two groups
ggplot(mortality_data, aes(x = age, y = mortality_rate, color = factor(health_dummy))) +
geom_line() +
labs(
x = "Age",
y = "Mortality Rate",
title = "Mortality Rate by Age for Different Health Groups",
color = "Health Group"
)
# All question 4 code here
# Create table for fair/poor health and mortality by family income
graph_a <- nhis2010 %>%
drop_na(incfam,mort) %>%
group_by(incfam) %>%
summarise(mean_fair_poor_health = mean(health_dummy),
mean_mortality = mean(mort))
# Create bar plots for family income
fam_health <- ggplot(graph_a, aes(x = incfam)) +
geom_bar(aes(y = mean_fair_poor_health), stat = "identity", fill = "blue", position = "dodge") +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Fair/Poor Health by Family Income")
fam_mort <- ggplot(graph_a, aes(x = incfam)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = "dodge") +
labs(x = "Family Income", y = "Mean Value", title = "Rates of Mortality by Family Income")
# Categorize years of education into five categories
nhis2010 <- nhis2010 %>%
drop_na(edyrs)%>%
mutate(education_category = case_when(
edyrs < 12 ~ "Less than High School",
edyrs == 12 ~ "High School Completion",
edyrs >= 13 & edyrs <= 15 ~ "Some College",
edyrs == 16 ~ "College Completion",
edyrs > 16 ~ "Post-graduate Study"
))
# Create table for fair/poor health and mortality by education category
graph_b <- nhis2010 %>%
drop_na(mort)%>%
group_by(education_category) %>%
summarise(mean_fair_poor_health = mean(health_dummy),
mean_mortality = mean(mort))
# Create bar plots for education
edu_health <- ggplot(graph_b, aes(x = education_category)) +
geom_bar(aes(y = mean_fair_poor_health), stat = "identity", fill = "blue", position = "dodge") +
labs(x = "Education Level", y = "Mean Value", title = "Rates of Fair/Poor Health by Education Level") +
theme(axis.text.x = element_text(angle = 35, hjust = 1))  # Rotate x-axis labels
edu_mort <- ggplot(graph_b, aes(x = education_category)) +
geom_bar(aes(y = mean_mortality), stat = "identity", fill = "red", position = "dodge") +
labs(x = "Education Level", y = "Mean Value", title = "Rates of Mortality by Education Level") +
theme(axis.text.x = element_text(angle = 35, hjust = 1))  # Rotate x-axis labels
fam_health
fam_mort
edu_health
edu_mort
# All question 5 code here
#dropping empty rows
nhis2010 <- nhis2010 %>%
drop_na(mort,health_dummy,incfam,age,education_category,black,hisp,asian,other)
#generating dummy variables for education categories
LessHS <- ifelse(nhis2010$education_category == "Less than High School", 1, 0)
HSGrad <- ifelse(nhis2010$education_category == "High School Completion", 1, 0)
SomeCol <- ifelse(nhis2010$education_category == "Some College", 1, 0)
ColGrad <- ifelse(nhis2010$education_category == "College Completion", 1, 0)
PostGrad <- ifelse(nhis2010$education_category == "Post-graduate Study", 1, 0)
#generating dummy variables for income categories
Low <- ifelse(nhis2010$incfam == "$0 - $34,999", 1, 0)
LowMed <- ifelse(nhis2010$incfam == "$35,000 - $49,999", 1, 0)
Med <- ifelse(nhis2010$incfam == "$50,000 - $74,999", 1, 0)
MedHigh <- ifelse(nhis2010$incfam == "$75,000 - $99,999", 1, 0)
High <- ifelse(nhis2010$incfam == "$100,000 and over", 1, 0)
#add all the dummy variables to nhis2010
nhis2010 <- nhis2010 %>%
mutate(
LessHS=LessHS,
HsGrad=HSGrad,
SomeCol=SomeCol,
ColGrad=ColGrad,
PostGrad=PostGrad,
Low=Low,
LowMed=LowMed,
Med=Med,
MedHigh=MedHigh,
High=High
)
#view(nhis2010)
ols_model_pf <- feols(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero')
nhis2010$ols_predict_pf <- predict(ols_model_pf, nhis2010, type="response")
ols_model_mort <- feols(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero')
nhis2010$ols_predict_mort <- predict(ols_model_mort, nhis2010, type="response")
probit_model_pf <- feglm(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
nhis2010$probit_predict_pf <- predict(probit_model_pf, nhis2010, type="response")
probit_model_mort <- feglm(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
nhis2010$probit_predict_mort <- predict(probit_model_mort, nhis2010, type="response")
logit_model_pf <- feglm(health_dummy ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
nhis2010$logit_predict_pf <- predict(logit_model_pf, nhis2010, type="response")
logit_model_mort <- feglm(mort ~  age +
Low + LowMed + Med + MedHigh + High +
LessHS + HsGrad + SomeCol + ColGrad + PostGrad +
black + hisp + asian + other,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
nhis2010$logit_predict_mort <- predict(logit_model_mort, nhis2010, type="response")
# ols_model_pf
# probit_model_pf
# logit_model_pf
#summary statistics of health
nhis2010 %>%
select(ols_predict_pf,logit_predict_pf,probit_predict_pf) %>%
summary()
#summary statistics of mortality
nhis2010 %>%
select(ols_predict_mort,logit_predict_mort,probit_predict_mort) %>%
summary()
#marginal effect of IVs for poor and fair health using logit
logitmfx(health_dummy ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for poor and fair health using probit
probitmfx(health_dummy ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for mortality using logit
logitmfx(mort ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#marginal effect of IVs for poor and fair healt usin probit
probitmfx(mort ~  incfam + age + education_category + black + hisp + asian + other,
data = nhis2010,
atmean = TRUE,
robust = TRUE)
#odds ratio of logit mortality
logitor(mort ~incfam+ age + education_category + black + hisp + asian + other,
data = nhis2010,
robust = TRUE)
#odds ratio of logit poor or fair health
logitor(health_dummy ~incfam+ age + education_category + black + hisp + asian + other,
data = nhis2010,
robust = TRUE)
# All question 6 code here
logit_model_mort
deltaMethod(logit_model_mort,"(asian + LessHS + Low) - (black+ColGrad)",rhs=0)
#manually
#Group A is an asian adult with less than 12 years or education and family income less the 35k
GroupA <- (-0.580831612  #asian coef
+0.755474   #less than $35k
+0.362800)	 #less than 12 years edu
# Group B: Black adults with 16 years of education and family incomes over $100k
GroupB <- (-0.003324	 #black coef
+0 # 16 or more years edu, 0 due to collinearity
+0) #family income over 100k, 0 due to collinearity
print(GroupA-GroupB)
# All question 6 code here
logit_model_mort
deltaMethod(logit_model_mort,"(asian + LessHS + Low) - (black+ColGrad)",rhs=0)
#manually
#Group A is an asian adult with less than 12 years or education and family income less the 35k
GroupA <- (-0.580831612  #asian coef
+0.755474   #less than $35k
+0.362800)	 #less than 12 years edu
# Group B: Black adults with 16 years of education and family incomes over $100k
GroupB <- (-0.003324	 #black coef
+0.211033 # 16 years of edu
+0) #family income over 100k, 0 due to collinearity
print(GroupA-GroupB)
# All question 6 code here
logit_model_mort
deltaMethod(logit_model_mort,"(asian + LessHS + Low) - (black+ColGrad)",rhs=0)
#manually
#Group A is an asian adult with less than 12 years or education and family income less the 35k
GroupA <- (-0.580831612  #asian coef
+0.755474   #less than $35k
+0.362800)	 #less than 12 years edu
# Group B: Black adults with 16 years of education and family incomes over $100k
GroupB <- (-0.003324	 #black coef
+0.211033 # 16 years of edu
+0) #family income over 100k, 0 due to collinearity
GroupA-GroupB
nhis2010 %>%
filter(asian==1
) %>%
n
nhis2010 %>%
filter(asian==1 &
LessHS==1 &
Low==1)%>%
n
nhis2010 %>%
filter(asian==1 &
LessHS==1 &
Low==1)
nhis2010 %>%
filter(asian==1 &
LessHS==1 &
Low==1) %>%
count()
nhis2010 %>%
filter(asian*LessHS*Low==1) %>%
count()
nhis2010 %>%
filter(asian*LessHS*Low==1) %>%
count()
nnhis2010 %>%
filter(black*ColGrad*High==1) %>%
count()
nhis2010 %>%
filter(asian*LessHS*Low==1) %>%
count()
nhis2010 %>%
filter(black*ColGrad*High==1) %>%
count()
nhis2010 %>%
filter(asian*LessHS*Low==1) %>%
count()/count(nhis2010)
nhis2010 %>%
filter(asian*LessHS*Low==1) %>%
count()/count(nhis2010)
nhis2010 %>%
filter(black*ColGrad*High==1) %>%
count()/count(nhis2010)
