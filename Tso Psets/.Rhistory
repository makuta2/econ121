fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_fphealth)
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
# All question 8 code here
nlsy_kids <- nlsy_kids %>% drop_na(fphealth, hsgrad, somecoll)
# Estimate fixed-effects logit models for each outcome
fe_model_fphealth <- feols(fphealth ~ head_start | mom_id, data = nlsy_kids)
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_fphealth)
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
#install.packages("plm")
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy_kids.Rdata"))
# The PDF will show the code AND output here.
# Summarize the data here.
#looking at the amount of missing data to determine which ones are worth dropping.
colSums(is.na(nlsy_kids))/nrow(nlsy_kids)
#ppvt_3 is missing 80%+, dropping would result in most of the data being missing
nlsy_kids<-nlsy_kids %>% drop_na(lninc_0to3, momed, lnbw,
comp_score_5to6 ,learndis)
view(nlsy_kids)
summary(nlsy_kids)
nlsy_kids_HS <- subset(nlsy_kids, head_start == 1)
nlsy_kids_NHS <- subset(nlsy_kids, head_start == 0)
#comparing the difference of mean and median of the two subsets of head_start
# Subset the dataset for head_start = 1
subset_head_start_1 <- subset(nlsy_kids, head_start == 1)
# Subset the dataset for head_start = 0
subset_head_start_0 <- subset(nlsy_kids, head_start == 0)
# Get the names of all variables in the dataset
all_variables <- names(nlsy_kids)
# Initialize vectors to store differences
mean_differences <- c()
median_differences <- c()
# Loop through variables
for (variable in all_variables) {
# Skip non-numeric variables
if (!is.numeric(nlsy_kids[[variable]])) {
next
}
# Calculate mean and median for head_start = 1
mean_head_start_1 <- mean(subset_head_start_1[[variable]])
median_head_start_1 <- median(subset_head_start_1[[variable]])
# Calculate mean and median for head_start = 0
mean_head_start_0 <- mean(subset_head_start_0[[variable]])
median_head_start_0 <- median(subset_head_start_0[[variable]])
# Calculate differences
mean_difference <- mean_head_start_1 - mean_head_start_0
median_difference <- median_head_start_1 - median_head_start_0
# Store differences in vectors
mean_differences <- c(mean_differences, mean_difference)
median_differences <- c(median_differences, median_difference)
}
# Create a data frame to display the results
results <- data.frame(
Variable = all_variables,
MeanDifference = mean_differences,
MedianDifference = median_differences
)
# Print the results, head_start minus non_head_start
print(results)
# All question 3 code here.
# Run OLS regression
ols_model <- feols(comp_score_5to6 ~ head_start, data = nlsy_kids)
summary(ols_model)
#boxplot(comp_score_5to6 ~ head_start, data = nlsy_kids, main = "Comparison of Test Scores by Head Start Participation")
# All question 4 code here
# Create a new data frame with family-level means
family_means <- nlsy_kids %>%
group_by(mom_id) %>%
summarise(mean_head_start = mean(head_start),
mean_test_scores = mean(comp_score_5to6))
# Run OLS regression
ols_model_family <- feols(mean_test_scores ~ mean_head_start,
data = family_means)
# Summarize the model
summary(ols_model_family)
# All question 5 code here
ols_model_fe <- feols(comp_score_5to6 ~ head_start | mom_id,
data = nlsy_kids)
summary(ols_model_fe)
# All question 6 code here
ols_model_cov_ppvt <- feols(comp_score_5to6 ~ head_start + ppvt_3 | mom_id,
data = nlsy_kids, vcov = "hetero")
ols_model_cov_learndis <- feols(comp_score_5to6 ~ head_start + learndis | mom_id,
data = nlsy_kids, vcov = "hetero")
ols_model_cov_both <- feols(comp_score_5to6 ~ head_start + ppvt_3 + learndis | mom_id,
data = nlsy_kids, vcov = "hetero")
summary(ols_model_cov_ppvt)
summary(ols_model_cov_learndis)
summary(ols_model_cov_both)
# All question 7 code here
# creating a function to standardize test scores across ages
standardize_scores <- function(scores) {
return((scores - mean(scores, na.rm = TRUE)) / sd(scores, na.rm = TRUE))
}
# Standardize test scores for each age group
nlsy_kids$std_comp_score_5to6 <- standardize_scores(nlsy_kids$comp_score_5to6)
nlsy_kids$std_comp_score_7to10 <- standardize_scores(nlsy_kids$comp_score_7to10)
nlsy_kids$std_comp_score_11to14 <- standardize_scores(nlsy_kids$comp_score_11to14)
# Estimate fixed-effects models for each age group
fe_model_5to6 <- feols(std_comp_score_5to6 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_7to10 <- feols(std_comp_score_7to10 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
fe_model_11to14 <- feols(std_comp_score_11to14 ~ head_start | mom_id, data = nlsy_kids, vcov = "iid")
# Print the summary of the models
summary(fe_model_5to6)
summary(fe_model_7to10)
summary(fe_model_11to14)
# All question 8 code here
nlsy_kids <- nlsy_kids %>% drop_na(fphealth, hsgrad, somecoll)
# Estimate fixed-effects logit models for each outcome
fe_model_fphealth <- feols(fphealth ~ head_start | mom_id, data = nlsy_kids)
fe_model_hsgrad <- feols(hsgrad ~ head_start | mom_id, data = nlsy_kids)
fe_model_somecoll <- feols(somecoll ~ head_start | mom_id, data = nlsy_kids)
# Print the summary of the models
summary(fe_model_fphealth)
summary(fe_model_hsgrad)
summary(fe_model_somecoll)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start*(black + hispanic + male)
| mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start*(1+black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start*(1+black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + (black + hispanic + male)
head_start*(black + hispanic + male) |
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start + (black + hispanic + male)
head_start*(black + hispanic + male),
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
#graduation rates without headstart
fe_model_hsgrad_nhs <- feols(hsgrad ~  black + hispanic + male |
mom_id, data = nlsy_kids)
summar(fe_model_hsgrad_nhs)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
#graduation rates without headstart
fe_model_hsgrad_nhs <- feols(hsgrad ~  black + hispanic + male |
mom_id, data = nlsy_kids)
summary(fe_model_hsgrad_nhs)
feols(hsgrad ~ black + hispanic)
feols(hsgrad ~ black + hispanic, data=nlsy_kids)
feols(hsgrad ~ black + hispanic + male, data=nlsy_kids)
nhsgrad <- feols(hsgrad ~ black + hispanic + male|mom_id, data=nlsy_kids)
summary(nhsgrad)
# All question 9 code here
#using fixed effects OLS
fe_model_hsgrad <- feols(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male) |
mom_id, data = nlsy_kids)
# Summarize the model
summary(fe_model_hsgrad)
#using the Panel Linear Model(PLM) method
# Estimate the model with interaction terms
interaction_model <- plm(hsgrad ~ head_start + black + hispanic + male +
head_start*(black + hispanic + male),
data = nlsy_kids,
index = c("mom_id"),
model = "within",
effect = "individual")
# Summarize the model
summary(interaction_model)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code AND output here.
# Summarize the data here.
summary(crime_argentina)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
library(ggplot2)
# load(url("https://github.com/tvogl/econ121/raw/main/data/crime_argentina.csv"))
crime_argentina <- read_csv("D:/Documents/Class/Econ 121/econ121/data/crime_argentina.csv")
view(crime_argentina)
# The PDF will show the code AND output here.
# Summarize the data here.
summary(crime_argentina)
# Check for missing values in the entire dataset
any_missing <- any(is.na(crime_argentina))
# Print the result
if (any_missing) {
cat("There are missing values in the dataset.\n")
} else {
cat("There are no missing values in the dataset.\n")
}
# Explore differences in conscription rates across birth years
boxplot(conscripted ~ birthyr, data = crime_argentina, main = "Conscription Rates Across Birth Years", xlab = "Birth Year", ylab = "Conscription Rate")
# Explore differences in crime rates across birth years
boxplot(crimerate ~ birthyr, data = crime_argentina, main = "Crime Rates Across Birth Years", xlab = "Birth Year", ylab = "Crime Rate")
# Explore differences in lottery numbers across birth years
boxplot(draftnumber ~ birthyr, data = crime_argentina, main = "Lotto Number Across Birth Years", xlab = "Birth Year", ylab = "Draft Number")
# All question 3 code here.
# Run OLS regression
ols_crime_conscript <- feols(crimerate ~ conscripted + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Summarize the model
summary(ols_crime_conscript)
feols(crimerate ~  birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
ols_crime_conscript <- feols(crimerate ~ conscripted + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
feols(crimerate ~  birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
feols(crimerate ~  birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Summarize the model
summary(ols_crime_conscript)
feols(conscripted ~  birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
library(ggplot2)
# load(url("https://github.com/tvogl/econ121/raw/main/data/crime_argentina.csv"))
crime_argentina <- read_csv("D:/Documents/Class/Econ 121/econ121/data/crime_argentina.csv")
view(crime_argentina)
# The PDF will show the code AND output here.
# Summarize the data here.
summary(crime_argentina)
# Check for missing values in the entire dataset
any_missing <- any(is.na(crime_argentina))
# Print the result
if (any_missing) {
cat("There are missing values in the dataset.\n")
} else {
cat("There are no missing values in the dataset.\n")
}
# Explore differences in conscription rates across birth years
boxplot(conscripted ~ birthyr, data = crime_argentina, main = "Conscription Rates Across Birth Years", xlab = "Birth Year", ylab = "Conscription Rate")
# Explore differences in crime rates across birth years
boxplot(crimerate ~ birthyr, data = crime_argentina, main = "Crime Rates Across Birth Years", xlab = "Birth Year", ylab = "Crime Rate")
# Explore differences in lottery numbers across birth years
boxplot(draftnumber ~ birthyr, data = crime_argentina, main = "Lotto Number Across Birth Years", xlab = "Birth Year", ylab = "Draft Number")
# All question 3 code here.
# Run OLS regression
ols_crime_conscript <- feols(crimerate ~ conscripted + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Summarize the model
summary(ols_crime_conscript)
# All question 4 code here
# Define birth years and corresponding cutoffs
years <- c(1958, 1959, 1960, 1961, 1962)
cutoffs <- c(175, 320, 341, 350, 320)
# Code a variable indicating eligibility (1 if eligible, 0 if not)
crime_argentina$eligible <- with(crime_argentina,
ifelse(birthyr == years[1] & draftnumber >= cutoffs[1], 1,
ifelse(birthyr == years[2] & draftnumber >= cutoffs[2], 1,
ifelse(birthyr == years[3] & draftnumber >= cutoffs[3], 1,
ifelse(birthyr == years[4] & draftnumber >= cutoffs[4], 1,
ifelse(birthyr == years[5] & draftnumber >= cutoffs[5], 1,
0))))))
# Check the new variable
view(crime_argentina)
# All question 5 code here
#first stage regression
ols_conscript_eligibility <- feols(conscripted ~ eligible + birthyr +
argentine + indigenous +
naturalized,
data = crime_argentina,
vcov = 'hetero')
summary(ols_conscript_eligibility)
# All question 6 code here
# Run reduced form regression
reduced_form_model <- feols(crimerate ~ eligible + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Summarize the model
summary(reduced_form_model)
# All question 7 code here
# First Stage Estimate
first_stage_estimate <- coef(ols_conscript_eligibility)['eligible']
# Reduced Form Estimate
reduced_form_estimate <- coef(reduced_form_model)['eligible']
# Instrumental Variables (IV) Estimate
iv_estimate <- reduced_form_estimate / first_stage_estimate
# Print the IV Estimate
cat("Instrumental Variables (IV) Estimate:", iv_estimate, "\n")
# All question 8 code here
tsls_crimerate <- feols(crimerate ~ birthyr + argentine + indigenous +
naturalized| conscripted ~ eligible,
data = crime_argentina)
summary(tsls_crimerate, stage= 1)
summary(tsls_crimerate, stage= 2)
ggplot(crime_argentina, aes(draftnumber, conscripted)) +
geom_point() +
facet_wrap(~birthyr)
crime_argentina$distance <- with(crime_argentina,
ifelse(birthyr == years[1], draftnumber - cutoffs[1],
ifelse(birthyr == years[2], draftnumber - cutoffs[2],
ifelse(birthyr == years[3], draftnumber - cutoffs[3],
ifelse(birthyr == years[4], draftnumber - cutoffs[4],
ifelse(birthyr == years[5], draftnumber - cutoffs[5],
0))))))
crime_argentina_distance <- crime_argentina %>%
filter(distance >= -100, distance <= 100)
view(crime_argentina_distance)
ggplot(crime_argentina_distance, aes(distance, conscripted)) +
geom_point() +
labs(title = "Scatter Plot of Conscripted against Distance",
x = "Distance from Birth-Year-Specific Cutoff",
y = "Conscripted") +
facet_wrap(~birthyr)
crime_argentina$distance <- with(crime_argentina,
ifelse(birthyr == years[1], draftnumber - cutoffs[1],
ifelse(birthyr == years[2], draftnumber - cutoffs[2],
ifelse(birthyr == years[3], draftnumber - cutoffs[3],
ifelse(birthyr == years[4], draftnumber - cutoffs[4],
ifelse(birthyr == years[5], draftnumber - cutoffs[5],
0))))))
crime_argentina_distance <- crime_argentina %>%
filter(distance >= -100, distance <= 100)
view(crime_argentina_distance)
ggplot(crime_argentina_distance, aes(distance, crimerate)) +
geom_point() +
labs(title = "Scatter Plot of Crimerate against Distance",
x = "Distance from Birth-Year-Specific Cutoff",
y = "Crimerate") +
facet_wrap(~birthyr)
# First stage regression
first_stage_model <- feols(conscripted ~ eligible + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Extract predicted values from the first stage
crime_argentina$predicted_conscripted <- fitted(first_stage_model)
# Reduced form regression
reduced_form_model <- feols(crimerate ~ predicted_conscripted + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Extract predicted values from the reduced form
crime_argentina$predicted_crimerate <- fitted(reduced_form_model)
# Second stage regression
second_stage_model <- feols(crimerate ~ predicted_conscripted + birthyr +
argentine + indigenous + naturalized,
data = crime_argentina,
vcov = 'hetero')
# Print the summary of the second stage results
summary(second_stage_model)
knitr::opts_chunk$set(echo = TRUE) # sets the code chunk format
rm(list = ls()) # clears the environment
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
#install.packages("plm")
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs5.Rdata"))
view(nlsy_kids)
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
#install.packages("plm")
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs5.Rdata"))
nlsy_kids<-nfhs5
view(nlsy_kids)
nlsy_kids$mortality <-
feols(child_u1death ~ child_bord)
feols(child_u1death ~ child_bord)
feols(child_u1death ~ child_bord,
data = nlsy_kids)
# set the code chunk format
knitr::opts_chunk$set(echo = TRUE)
# clear the environment
rm(list=ls())
# load all packages from the course
library(tidyverse)
library(fixest)
library(car)
library(mfx)
# load the dataset
load(url("https://github.com/tvogl/econ121/raw/main/data/migration.Rdata"))
view(migration)
summary(migration)
lpm_model <- feols(child_mortality ~ child_order, data = nfhs5, cluster = nfhs5$psu_id)
# The PDF will show the code you write here but not the output.
# Load packages and dataset here.
#install.packages("plm")
rm(list=ls())
library(tidyverse)
library(fixest)
library(plm)
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs5.Rdata"))
nlsy_kids<-nfhs5
view(nlsy_kids)
lpm_model <- feols(child_mortality ~ child_order, data = nfhs5, cluster = nfhs5$psu_id)
lpm_model <- feols(child_u1death ~ child_order, data = nfhs5, cluster = nfhs5$psu_id)
lpm_model <- feols(child_u1death ~ child_bord, data = nfhs5, cluster = nfhs5$psu_id)
summary(lpm_model)
