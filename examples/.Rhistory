rm(list=ls())
library(tidyverse)
library(fixest)
summarise(census, mean(educ,na.rm=TRUE))
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy79.Rdata"))
summarise(nlsy79, mean(educ,na.rm=TRUE))
nlsy79 %>% summarise(mean(educ,na.rm=TRUE))
mean(nlsy79$educ,na.rm=TRUE)
nlsy79 %>% summarize(mean(educ,na.rm=TRUE))
# uncomment if these packages are not installed
# install.packages(c('tidyverse'))
# analyzes naming trends in the social security names database (national).
# takes interest in frequency of hilary/hillary before and after clinton elections.
# load packages
library(tidyverse)
# clear environment
rm(list = ls())
# read in names dataset
ssa <- read_csv("https://github.com/tvogl/econ121/raw/main/data/ssa_names.csv")
# summarize
summary(ssa)
# to understand data structure, look at first 10 rows
slice(ssa, 1:10)
# could have equivalently used the pipe operator
ssa %>% slice(1:10)
# what are the most common names today?
# create a table of the top-ten boys and girls names in 2022
ssa %>%
filter(year==2022) %>%              # only look at 2022 names
group_by(sex) %>%                   # look separately within M and F
slice_max(frequency, n=10)          # top 10 observations by sex
# what were the most common names in 1940?
# create a table of the top-ten boys and girls names in 1940
ssa %>%
filter(year==1940) %>%
group_by(sex) %>%
slice_max(frequency, n=10)
# how has the number of babies changed over time?
# create a table of the total number of babies by year
# and then store the table under the name annual_totals
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
# let's have a look at the table
annual_totals
# too many rows to be interpretable!
# let's do it as a line graph using ggplot()
ggplot(annual_totals, aes(x = year, y=total)) +    # use annual_totals data frame, define x and y axes
geom_line()
ggplot(annual_totals, aes(x = year, y=total, color=sex)) +    # use annual_totals data frame, define x and y axes
geom_line()
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year,sex) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
# let's have a look at the table
annual_totals
# too many rows to be interpretable!
# let's do it as a line graph using ggplot()
ggplot(annual_totals, aes(x = year, y=total,color=sex)) +    # use annual_totals data frame, define x and y axes
geom_line()
library(tidyverse)
# clear environment
rm(list = ls())
# read in names dataset
ssa <- read_csv("https://github.com/tvogl/econ121/raw/main/data/ssa_names.csv")
View(ssa)
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
View(annual_totals)
View(ssa)
# uncomment if these packages are not installed
# install.packages(c('tidyverse','fixest'))
# this script continues analyzing the relationship between age and
# asset ownership in India, using the National Family Health Survey
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(car) # for deltaMethod()
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
# filter data to include only 20-80 year old household heads
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
# we left off with estimates of a single slope, # as a summary of a population
# pattern. recall that we used sampling weights, to ensure that the estimates
# are representative of the population slope.
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
# heterogeneity between urban and rural areas using subset
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight, subset = ~rural==0)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight, subset = ~rural==1)
# heterogeneity between urban and rural areas using split (equivalent to above)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight, split = ~rural)
# the urban/rural subsamples are independent, so we can compute
# a t-statistic for the difference in slopes "by hand"
(0.001958-0.002472)/sqrt(0.000051^2+0.000089^2)
# alternatively, we can use an interaction term.
#first generate the interaction term
nfhs4 <- mutate(nfhs4, ageXrural = age*rural)
# now run the model and save the results as model1 for later
model1 <- feols(assets ~ age + rural + ageXrural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
model1
# same t-statistic, subject to a bit of rounding error in our caltulations.
# assets rise less steeply with age in rural areas.
# we could also do this more elegantly using R's functionality for
# interaction terms, substituting "age * rural" for "age + rural + ageXrural".
# but this syntax doesn't play as nicely with the deltaMethod() function we use
# below. just to show you how it's done:
feols(assets ~ age * rural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
# if we wanted to obtain the slope for rural areas from the interacted model,
# we would take a linear combination of the coefficient on age plus coefficient
# on the ruralXage interaction term. the standard way to do this would be the
# glht() function from the multcomp package. to reduce the number of packages
# and functions we use, we'll just rely on the deltaMethod() function from the
# car package. recall that when the delta method is applied to a linear combination,
# it is exactly the same as the conventional approach to inference on linear combinations.
deltaMethod(model1,"age + ageXrural")
# uncomment if these packages are not installed
# install.packages(c('tidyverse','fixest'))
# this script continues analyzing the relationship between age and
# asset ownership in India, using the National Family Health Survey
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(car) # for deltaMethod()
library(marginaleffects)
oad nlsy79.Rdata
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
# filter data to include only 20-80 year old household heads
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
model1 <- feols(assets ~ age + rural + ageXrural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
deltaMethod(model1,"age + ageXrural")
nfhs4 <- mutate(nfhs4, ageXrural = age*rural)
# now run the model and save the results as model1 for later
model1 <- feols(assets ~ age + rural + ageXrural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
model1
deltaMethod(model1,"age + ageXrural")
hypotheses(model1, "age + ageXrural = 0")
library(marginaleffects)
install.packages('marginaleffects')
library(marginaleffects)
hypotheses(model1, "age + ageXrural = 0")
hypotheses(model1,"age / (age + ageXrural) = 0")
hypotheses(model1,"age / (age + ageXrural) = 1")
hypotheses(model1,"age / (age + ageXrural)")
hypotheses(model1,"age / (age + ageXrural) = 1")
hypotheses(model1,"age / (age + ageXrural) = 0")
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
ggplot(nfhs4, aes(x=weight)) +
geom_histogram()
weighted_sd <- function(x, w) {
weighted_mean <- sum(x * w) / sum(w)
weighted_variance <- sum(w * (x - weighted_mean)^2) / sum(w)
sqrt(weighted_variance)
}
nfhs4_by_age <-
nfhs4 %>%
group_by(age) %>%
summarize(mean = weighted.mean(assets,w=weight),
sd = weighted_sd(assets,w=weight),
numobs = n())
View(nfhs4_by_age)
ggplot(nfhs4_by_age, aes(x=age, y=mean, size=numobs)) +
geom_point()
ggplot(nfhs4_by_age, aes(x=age, y=sd, size=numobs)) +
geom_point()
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero')
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero', weights = ~weight)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
ggplot(nfhs4, aes(x=weight)) +
geom_histogram()
nfhs4_by_age <-
nfhs4 %>%
group_by(age) %>%
summarize(mean = weighted.mean(assets,w=weight),
sd = weighted_sd(assets,w=weight),
numobs = n())
weighted_sd <- function(x, w) {
weighted_mean <- sum(x * w) / sum(w)
weighted_variance <- sum(w * (x - weighted_mean)^2) / sum(w)
sqrt(weighted_variance)
}
nfhs4_by_age <-
nfhs4 %>%
group_by(age) %>%
summarize(mean = weighted.mean(assets,w=weight),
sd = weighted_sd(assets,w=weight),
numobs = n())
View(nfhs4_by_age)
ggplot(nfhs4_by_age, aes(x=age, y=mean, size=numobs)) +
geom_point()
ggplot(nfhs4_by_age, aes(x=age, y=sd, size=numobs)) +
geom_point()
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero')
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero', weights = ~weight)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
