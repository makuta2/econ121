rm(list=ls())
library(tidyverse)
library(fixest)
summarise(census, mean(educ,na.rm=TRUE))
load(url("https://github.com/tvogl/econ121/raw/main/data/nlsy79.Rdata"))
summarise(nlsy79, mean(educ,na.rm=TRUE))
nlsy79 %>% summarise(mean(educ,na.rm=TRUE))
mean(nlsy79$educ,na.rm=TRUE)
nlsy79 %>% summarize(mean(educ,na.rm=TRUE))
# uncomment if these packages are not installed
# install.packages(c('tidyverse'))
# analyzes naming trends in the social security names database (national).
# takes interest in frequency of hilary/hillary before and after clinton elections.
# load packages
library(tidyverse)
# clear environment
rm(list = ls())
# read in names dataset
ssa <- read_csv("https://github.com/tvogl/econ121/raw/main/data/ssa_names.csv")
# summarize
summary(ssa)
# to understand data structure, look at first 10 rows
slice(ssa, 1:10)
# could have equivalently used the pipe operator
ssa %>% slice(1:10)
# what are the most common names today?
# create a table of the top-ten boys and girls names in 2022
ssa %>%
filter(year==2022) %>%              # only look at 2022 names
group_by(sex) %>%                   # look separately within M and F
slice_max(frequency, n=10)          # top 10 observations by sex
# what were the most common names in 1940?
# create a table of the top-ten boys and girls names in 1940
ssa %>%
filter(year==1940) %>%
group_by(sex) %>%
slice_max(frequency, n=10)
# how has the number of babies changed over time?
# create a table of the total number of babies by year
# and then store the table under the name annual_totals
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
# let's have a look at the table
annual_totals
# too many rows to be interpretable!
# let's do it as a line graph using ggplot()
ggplot(annual_totals, aes(x = year, y=total)) +    # use annual_totals data frame, define x and y axes
geom_line()
ggplot(annual_totals, aes(x = year, y=total, color=sex)) +    # use annual_totals data frame, define x and y axes
geom_line()
annual_totals <-                      # assign to annual_totals name
ssa %>%
group_by(year,sex) %>%                # group by year
summarise(total = sum(frequency)) # generate total number of babies in each year
# let's have a look at the table
annual_totals
# too many rows to be interpretable!
# let's do it as a line graph using ggplot()
ggplot(annual_totals, aes(x = year, y=total,color=sex)) +    # use annual_totals data frame, define x and y axes
geom_line()
