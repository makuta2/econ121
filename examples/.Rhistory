feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero')
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero', weights = ~weight)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
rm(list=ls())
rm(list=ls())
library(tidyverse)
library(fixest)
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
ggplot(nfhs4, aes(x=weight)) +
geom_histogram()
nfhs4_by_age <-
nfhs4 %>%
group_by(age) %>%
summarize(mean = weighted.mean(assets,w=weight),
sd = weighted_sd(assets,w=weight),
numobs = n())
weighted_sd <- function(x, w) {
weighted_mean <- sum(x * w) / sum(w)
weighted_variance <- sum(w * (x - weighted_mean)^2) / sum(w)
sqrt(weighted_variance)
}
nfhs4_by_age <-
nfhs4 %>%
group_by(age) %>%
summarize(mean = weighted.mean(assets,w=weight),
sd = weighted_sd(assets,w=weight),
numobs = n())
View(nfhs4_by_age)
ggplot(nfhs4_by_age, aes(x=age, y=mean, size=numobs)) +
geom_point()
ggplot(nfhs4_by_age, aes(x=age, y=sd, size=numobs)) +
geom_point()
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age, data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero')
feols(mean ~ age + I(age^2), data = nfhs4_by_age, vcov = 'hetero', weights = ~numobs)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero')
feols(assets ~ age + I(age^2), data = nfhs4, vcov = 'hetero', weights = ~weight)
feols(assets ~ age + I(age^2), data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
# uncomment if these packages are not installed
# install.packages(c('tidyverse','fixest','car'))
# this script continues analyzing the relationship between age and
# asset ownership in India, using the National Family Health Survey
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(car) # for deltaMethod()
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
# filter data to include only 20-80 year old household heads
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight, split = ~rural)
(0.001958-0.002472)/sqrt(0.000051^2+0.000089^2)
nfhs4 <- mutate(nfhs4, ageXrural = age*rural)
model1 <- feols(assets ~ age + rural + ageXrural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
model1
deltaMethod(model1,"age + ageXrural")
deltaMethod(model1,"age + ageXrural", rhs = 0)
deltaMethod(model1,"age / (age + ageXrural)")
rm(list=ls())
# uncomment if these packages are not installed
# install.packages(c('tidyverse','fixest','car'))
# this script continues analyzing the relationship between age and
# asset ownership in India, using the National Family Health Survey
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(car) # for deltaMethod()
# load nlsy79.Rdata
load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
# filter data to include only 20-80 year old household heads
nfhs4 <- filter(nfhs4, age >= 20 & age <= 80)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight)
feols(assets ~ age, data = nfhs4, vcov = ~clustnum, weights = ~weight, split = ~rural)
(0.001958-0.002472)/sqrt(0.000051^2+0.000089^2)
nfhs4 <- mutate(nfhs4, ageXrural = age*rural)
model1 <- feols(assets ~ age + rural + ageXrural, data = nfhs4, vcov = ~clustnum, weights = ~weight)
model1
deltaMethod(model1,"age + ageXrural")
deltaMethod(model1,"age + ageXrural", rhs = 0)
deltaMethod(model1,"age / (age + ageXrural)")
deltaMethod(model1,"age / (age + ageXrural)", rhs=1)
# clear environment and load packages
rm(list=ls())
library(tidyverse)
library(fixest)
library(car) # for deltaMethod()
# load nlsy79.Rdata
df<-load(url("https://github.com/tvogl/econ121/raw/main/data/nfhs4.Rdata"))
load(url("https://github.com/tvogl/econ121/raw/main/data/cps_18.Rdata"))
load(url("https://github.com/tvogl/econ121/raw/main/data/cps18.Rdata"))
# analysis of self-reported sadness in the national health interview survey.
# clear environment
rm(list = ls())
# load packages
library(tidyverse)
library(fixest)
library(mfx) # for easy estimation of marginal effects and odds ratios
# read in data
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# summarize
summary(nhis2010)
# drop observations with sadness missing/NA.
nhis2010 <- nhis2010 %>% drop_na(asad)
# generate a variable that equals one if ever sad, zero otherwise.
table(nhis2010$asad)
nhis2010$anysad <- ifelse(nhis2010$asad != "None of the time", 1, 0)
table(nhis2010$anysad)
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
nhis2010 %>%
group_by(edyrs) %>%
summarize(sadness = mean(anysad)) %>%
ggplot(aes(x = edyrs, y = anysad)) +
geom_point() +
geom_line()
nhis2010 %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = edyrs, y = mean_anysad)) +
geom_point() +
geom_line()
summary(is.na(edyrs))
summary(is.na(nhis2010$edyrs))
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad),
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() +
geom_line()
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad),
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point()
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad),
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point(fill = "transparent")
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each education level
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() + # scatter plot
guides(size = "none") # removes the legend
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each age/sex cell
numobs = n()) %>%
ggplot(aes(x = age, y = mean_anysad, size=numobs, color=factor(male))) +
geom_point() + # scatter plot
guides(size = "none") # removes the legend
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) +
geom_line() # line plots
table(nhis2010$marital)
table(nhis2010$marstat)
nhis2010 %>%
drop_na(marstat, male) %>%
group_by(marstat, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar() + # bar plots
facet_wrap(~male) # separate plots for men and women
nhis2010 %>%
drop_na(marstat, male) %>%
group_by(marstat, male) %>%
summarize(mean_anysad = mean(anysad))
nhis2010 %>%
drop_na(marstat, male) %>%
group_by(marstat, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") + # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
facet_wrap(~male) # separate plots for men and women
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") + # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity")
nhis2010 %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity")
nhis2010 %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
nhis2010 %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity")
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
logit_model
logit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
logit_model
rm(list = ls())
# load packages
library(tidyverse)
library(fixest)
library(mfx) # for easy estimation of marginal effects and odds ratios
# read in data
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
summary(nhis2010)
nhis2010 <- nhis2010 %>% drop_na(asad)
nhis2010$anysad <- ifelse(nhis2010$asad != "None of the time", 1, 0)
table(nhis2010$anysad)
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each education level
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() # scatter plot
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
nhis2010$p_ols <- predict(ols_model, nhis2010, type="response")
probit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
probit_model
nhis2010$p_probit <- predict(probit_model, nhis2010, type="response")
logit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
logit_model
nhis2010$p_logit <- predict(logit_model, nhis2010, type="response")
nhis2010 %>%
select(p_ols, p_probit, p_logit) %>%
summary()
nhis2010 %>%
select(p_ols, p_probit, p_logit) %>%
drop_na(p_ols, p_probit, p_logit) %>%
cor()
source("~/Dropbox/courses/econ121/econ121github/examples/sadness.R")
rm(list = ls())
# analysis of self-reported sadness in the national health interview survey.
# clear environment
rm(list = ls())
# load packages
library(tidyverse)
library(fixest)
library(mfx) # for easy estimation of marginal effects and odds ratios
# read in data
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# summarize
summary(nhis2010)
nhis2010 <- nhis2010 %>% drop_na(asad)
nhis2010$anysad <- ifelse(nhis2010$asad != "None of the time", 1, 0)
table(nhis2010$anysad)
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each education level
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() # scatter plot
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
probit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
probit_model
# analysis of self-reported sadness in the national health interview survey.
# clear environment
rm(list = ls())
# load packages
library(tidyverse)
library(fixest)
library(mfx) # for easy estimation of marginal effects and odds ratios
# read in data
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# summarize
summary(nhis2010)
# drop observations with sadness missing/NA.
nhis2010 <- nhis2010 %>% drop_na(asad)
# generate a variable that equals one if ever sad, zero otherwise.
table(nhis2010$asad)
nhis2010$anysad <- ifelse(nhis2010$asad != "None of the time", 1, 0)
table(nhis2010$anysad)
# could have also used: nhis2010 <- nhis2010 %>% mutate(anysad = ifelse(asad > 0, 1, 0))
# or: nhis2010 <- mutate(nhis2010, anysad = ifelse(asad > 0, 1, 0))
# SOME DESCRIPTIVE GRAPHS
# first, sadness by education. I will draw the markers proportional
# to the number of observations in each cell to emphasize that there
# are very few individuals with less than 10 years of education.
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each education level
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() # scatter plot
# next, sadness by age and sex. here, I won't keep track of cell size.
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
# finally, sadness by marital status
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
# COMPARING OLS, LOGIT, AND PROBIT
# estimate a linear probability model, a logit, and a probit.
# then generate predicted probabilities for each of these approaches.
# then compare the predicted probabilities. we use the feglm() function
# from the fixest package.
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
nhis2010$p_ols <- predict(ols_model, nhis2010, type="response")
probit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
probit_model
nhis2010$p_probit <- predict(probit_model, nhis2010, type="response")
logit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
logit_model
nhis2010$p_logit <- predict(logit_model, nhis2010, type="response")
# summarize predicted values from all three models - very similar!!
nhis2010 %>%
select(p_ols, p_probit, p_logit) %>%
summary()
# analysis of self-reported sadness in the national health interview survey.
# clear environment
rm(list = ls())
# load packages
library(tidyverse)
library(fixest)
library(mfx) # for easy estimation of marginal effects and odds ratios
# read in data
load(url("https://github.com/tvogl/econ121/raw/main/data/nhis2010.Rdata"))
# summarize
summary(nhis2010)
# drop observations with sadness missing/NA.
nhis2010 <- nhis2010 %>% drop_na(asad)
# generate a variable that equals one if ever sad, zero otherwise.
table(nhis2010$asad)
nhis2010$anysad <- ifelse(nhis2010$asad != "None of the time", 1, 0)
table(nhis2010$anysad)
# could have also used: nhis2010 <- nhis2010 %>% mutate(anysad = ifelse(asad > 0, 1, 0))
# or: nhis2010 <- mutate(nhis2010, anysad = ifelse(asad > 0, 1, 0))
# SOME DESCRIPTIVE GRAPHS
# first, sadness by education. I will draw the markers proportional
# to the number of observations in each cell to emphasize that there
# are very few individuals with less than 10 years of education.
nhis2010 %>%
drop_na(edyrs) %>%
group_by(edyrs) %>%
summarize(mean_anysad = mean(anysad), # mean of anysad within each education level
numobs = n()) %>%
ggplot(aes(x = edyrs, y = mean_anysad, size=numobs)) +
geom_point() # scatter plot
# next, sadness by age and sex. here, I won't keep track of cell size.
nhis2010 %>%
drop_na(age, male) %>%
group_by(age, male) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = age, y = mean_anysad, color=factor(male))) + # I use factor() so the color scale is categorical, not continuous
geom_line() # line plots
# finally, sadness by marital status
nhis2010 %>%
drop_na(marstat) %>%
group_by(marstat) %>%
summarize(mean_anysad = mean(anysad)) %>%
ggplot(aes(x = marstat, y = mean_anysad)) +
geom_bar(stat = "identity") # bar plot. identity just tells it to plot the y we specified, instead of a count or proportion.
# COMPARING OLS, LOGIT, AND PROBIT
# estimate a linear probability model, a logit, and a probit.
# then generate predicted probabilities for each of these approaches.
# then compare the predicted probabilities. we use the feglm() function
# from the fixest package.
ols_model <- feols(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero')
ols_model
nhis2010$p_ols <- predict(ols_model, nhis2010, type="response")
probit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'probit')
probit_model
nhis2010$p_probit <- predict(probit_model, nhis2010, type="response")
logit_model <- feglm(anysad ~ edyrs + age + male + black + hisp + asian + other + marstat,
data = nhis2010,
vcov = 'hetero',
family = 'logit')
logit_model
nhis2010$p_logit <- predict(logit_model, nhis2010, type="response")
# summarize predicted values from all three models - very similar!!
nhis2010 %>%
select(p_ols, p_probit, p_logit) %>%
summary()
summary()
nhis2010 %>% summary()
nhis2010 %>% select(asad) %>% summary()
library(dplyr)
nhis2010 %>% select(asad) %>% summary()
a<- nhis2010 %>%
select(p_ols, p_probit, p_logit)
a <- nhis2010 %>% select(p_ols, p_probit, p_logit)
nhis2010 %>%
select(c("p_ols", "p_probit", "p_logit")) %>%
summary()
nhis2010 %>%
select(p_ols) %>%
summary()
nhis2010 %>%
select(p_ols, p_probit, p_logit)
nhis2010 %>% select(health)
